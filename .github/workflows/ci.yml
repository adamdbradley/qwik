name: Qwik CI

on:
  # push:
  # pull_request:
  workflow_dispatch:
    name: 'Release'
    description: 'Create a release and publish to NPM.'
    inputs:
      version:
        description: 'Version'
        required: true
      disttag:
        description: 'NPM Dist Tag: latest, next, dev'
        required: true
        default: 'latest'

jobs:
  build-package:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Setup Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 16.x
      #     registry-url: https://registry.npmjs.org/

      # - name: Cache Dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: node_modules
      #     key: npm-cache-${{ hashFiles('yarn.lock') }}
      #     restore-keys: npm-cache-

      # - name: Install NPM Dependencies
      #   run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      # - name: Build
      #   run: yarn build.ci --set-publish-version=${{ github.event.inputs.version }} --validate-dist-tag=${{ github.event.inputs.disttag }}

      # - name: Upload Package Build Artifacts
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: dist-builder-io-qwik
      #     path: dist-dev/@builder.io-qwik
      #     if-no-files-found: error

  # lint:
  #   name: Lint
  #   if: ${{ github.event_name != 'release' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cache Dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-${{ hashFiles('yarn.lock') }}
  #         restore-keys: npm-cache-

  #     - name: Install NPM Dependencies
  #       run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

  #     - name: Prettier Check
  #       run: yarn prettier-check

  #     - name: Lint Check
  #       run: yarn lint

  # unit-tests:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10.x
  #         registry-url: https://registry.npmjs.org/

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cache Dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-${{ hashFiles('yarn.lock') }}
  #         restore-keys: npm-cache-

  #     - name: Install NPM Dependencies
  #       run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

  #     - name: Unit Tests
  #       run: |
  #         yarn build
  #         yarn test.unit

  # e2e-tests:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest

  #   timeout-minutes: 15

  #   steps:
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10.x
  #         registry-url: https://registry.npmjs.org/

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: E2E Tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         install-command: yarn --frozen-lockfile --ignore-engines
  #         start: yarn integration.server.prod
  #         wait-on: 'http://localhost:8081'
  #         wait-on-timeout: 120
  #         browser: chrome
  #         record: true
  #         group: 'Qwik E2E Test Group'
  #         spec: cypress/integration/*
  #         config-file: cypress/cypress.json
  #         config: defaultCommandTimeout=10000
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Upload Videos Artifacts
  #       uses: actions/upload-artifact@v1
  #       if: always()
  #       with:
  #         name: Cypress Videos
  #         path: cypress/videos

  # build-bindings:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       settings:
  #         - host: macos-latest
  #           target: x86_64-apple-darwin
  #           build: |
  #             yarn build.binding.ci --set-cargo-version=${{ github.event.inputs.version }}
  #             strip -x *.node

  #         - host: macos-latest
  #           target: aarch64-apple-darwin
  #           build: |
  #             yarn build.binding.ci --target=aarch64-apple-darwin --set-cargo-version=${{ github.event.inputs.version }}
  #             strip -x *.node

  #         - host: windows-latest
  #           build: yarn build.binding.ci --set-cargo-version=${{ github.event.inputs.version }}
  #           target: x86_64-pc-windows-msvc

  #         # - host: ubuntu-latest
  #         #   target: x86_64-unknown-linux-gnu
  #         #   docker: |
  #         #     docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY_URL
  #         #     docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian
  #         #     docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian builder
  #         #   build: |
  #         #     docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build.binding.ci --set-cargo-version=${{ github.event.inputs.version }} && strip qwik.linux-x64-gnu.node

  #   name: Build ${{ matrix.settings.target }}
  #   runs-on: ${{ matrix.settings.host }}
  #   defaults:
  #     run:
  #       working-directory: ./src/napi/
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16.x
  #         registry-url: https://registry.npmjs.org/

  #     - name: Install
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         override: true
  #         toolchain: stable
  #         target: ${{ matrix.settings.target }}

  #     - name: Generate Cargo.lock
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: generate-lockfile
  #         args: --manifest-path=src/napi/Cargo.toml

  #     - name: Cache Cargo Registry
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cargo/registry
  #         key: ${{ matrix.settings.target }}-node@16-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Cache Cargo Index
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cargo/git
  #         key: ${{ matrix.settings.target }}-node@16-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Cache NPM Dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: npm-cache-${{ matrix.settings.target }}-node@16-${{ hashFiles('yarn.lock') }}

  #     - name: Pull Latest Image
  #       run: ${{ matrix.settings.docker }}
  #       env:
  #         DOCKER_REGISTRY_URL: ghcr.io
  #         DOCKER_USERNAME: ${{ github.actor }}
  #         DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  #       if: ${{ matrix.settings.docker }}

  #     - name: Setup Toolchain
  #       run: ${{ matrix.settings.setup }}
  #       if: ${{ matrix.settings.setup }}
  #       shell: bash

  #     - name: Install NPM Dependencies
  #       run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

  #     - name: Build Binding
  #       run: ${{ matrix.settings.build }}
  #       shell: bash

  #     - name: Upload Binding Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: binding-${{ matrix.settings.target }}
  #         path: src/napi/*.node

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build-package
      # - build-bindings
      # - lint
      # - unit-tests
      # - e2e-tests

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #         ref: ${{ github.event.inputs.branch }}

  # - name: Download Build Artifacts
  #   uses: actions/download-artifact@v2

  # - name: Print Build Artifacts
  #   run: ls -R

  # - name: Move Platform Bindings
  #   run: |
  #     mv binding-aarch64-apple-darwin/qwik.darwin-arm64.node dist-builder-io-qwik/qwik.darwin-arm64.node
  #     mv binding-x86_64-apple-darwin/qwik.darwin-x64.node dist-builder-io-qwik/qwik.darwin-x64.node
  #     mv binding-x86_64-pc-windows-msvc/qwik.win32-x64-msvc.node dist-builder-io-qwik/qwik.win32-x64-msvc.node

  # - name: Pack @builder.io/qwik
  #   if: ${{ github.event_name != 'workflow_dispatch' }}
  #   run: |
  #     cd dist-builder-io-qwik
  #     mv `npm pack` ../builder.io-qwik.tgz

  # - name: Upload Qwik Package Artifact
  #   if: ${{ github.event_name != 'workflow_dispatch' }}
  #   uses: actions/upload-artifact@master
  #   with:
  #     name: Qwik NPM Package
  #     path: builder.io-qwik.tgz

    - run: |
        echo "github.event_name: ${{ github.event_name }}"
        echo "github.event_path: ${{ github.event_path }}"

  # - name: Publish @builder.io/qwik
  #   if: ${{ github.event_name == 'workflow_dispatch' }}
  #   # TODO!! Actual npm publish
  #   run: |
  #     cd dist-builder-io-qwik
  #     mv `npm pack` ../builder.io-qwik.tgz
